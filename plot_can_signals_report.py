import pandas as pd
import matplotlib.pyplot as plt
import os

# Load the decoded signals
excel_path = os.path.join('Output', 'decoded_can_signals.xlsx')
df = pd.read_excel(excel_path)

# Convert timestamp to float (seconds)
df['timestamp'] = df['timestamp'].astype(float)

# List of signals to plot
signals = [
    'VSA_RR_ROT_DIRECTION_1',
    'VSA_ABS_RL_WHEEL_SPEED_1',
    'VSA_RL_ROT_DIRECTION_1',
    'VSA_ABS_FL_WHEEL_SPEED_1',
    'VSA_FR_ROT_DIRECTION_1',
    'VSA_ABS_RR_WHEEL_SPEED_1',
    'VSA_FL_ROT_DIRECTION_1',
    'VSA_ABS_FR_WHEEL_SPEED_1',
]

# Create a PDF report
from matplotlib.backends.backend_pdf import PdfPages
report_path = os.path.join('Output', 'can_signal_report.pdf')
with PdfPages(report_path) as pdf:
    for sig in signals:
        plt.figure(figsize=(10, 4))
        plt.plot(df['timestamp'], df[sig], marker='o', linestyle='-', label=sig)
        plt.xlabel('Time (s)')
        plt.ylabel(sig)
        plt.title(f'{sig} vs Time')
        plt.legend()
        plt.grid(True)
        pdf.savefig()
        plt.close()
    # Add a summary page
    plt.figure(figsize=(10, 2))
    plt.axis('off')
    plt.text(0.5, 0.5, 'CAN Signal Report\nGenerated by CANLogs.py', ha='center', va='center', fontsize=16)
    pdf.savefig()
    plt.close()
print(f"Report saved to {report_path}")
